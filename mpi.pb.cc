// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mpi.proto

#include "mpi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace mpis {
class RequestContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestContext>
      _instance;
} _RequestContext_default_instance_;
class ReplyContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplyContext>
      _instance;
} _ReplyContext_default_instance_;
}  // namespace mpis
namespace protobuf_mpi_2eproto {
void InitDefaultsRequestContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpis::_RequestContext_default_instance_;
    new (ptr) ::mpis::RequestContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpis::RequestContext::InitAsDefaultInstance();
}

void InitDefaultsRequestContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestContextImpl);
}

void InitDefaultsReplyContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpis::_ReplyContext_default_instance_;
    new (ptr) ::mpis::ReplyContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpis::ReplyContext::InitAsDefaultInstance();
}

void InitDefaultsReplyContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReplyContextImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::RequestContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::RequestContext, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::RequestContext, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::RequestContext, buffer_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::RequestContext, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::ReplyContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::ReplyContext, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpis::ReplyContext, dst_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mpis::RequestContext)},
  { 9, -1, sizeof(::mpis::ReplyContext)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpis::_RequestContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpis::_ReplyContext_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mpi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmpi.proto\022\004mpis\"O\n\016RequestContext\022\013\n\003s"
      "rc\030\001 \001(\005\022\016\n\006device\030\002 \001(\005\022\023\n\013buffer_size\030"
      "\003 \001(\005\022\013\n\003tag\030\004 \001(\005\"+\n\014ReplyContext\022\016\n\006st"
      "atus\030\001 \001(\005\022\013\n\003dst\030\002 \001(\0052H\n\nMPIService\022:\n"
      "\014ISendRequest\022\024.mpis.RequestContext\032\022.mp"
      "is.ReplyContext\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mpi.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mpi_2eproto
namespace mpis {

// ===================================================================

void RequestContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestContext::kSrcFieldNumber;
const int RequestContext::kDeviceFieldNumber;
const int RequestContext::kBufferSizeFieldNumber;
const int RequestContext::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestContext::RequestContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mpi_2eproto::InitDefaultsRequestContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpis.RequestContext)
}
RequestContext::RequestContext(const RequestContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&src_, &from.src_,
    static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&src_)) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:mpis.RequestContext)
}

void RequestContext::SharedCtor() {
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&src_)) + sizeof(tag_));
  _cached_size_ = 0;
}

RequestContext::~RequestContext() {
  // @@protoc_insertion_point(destructor:mpis.RequestContext)
  SharedDtor();
}

void RequestContext::SharedDtor() {
}

void RequestContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestContext::descriptor() {
  ::protobuf_mpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestContext& RequestContext::default_instance() {
  ::protobuf_mpi_2eproto::InitDefaultsRequestContext();
  return *internal_default_instance();
}

RequestContext* RequestContext::New(::google::protobuf::Arena* arena) const {
  RequestContext* n = new RequestContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestContext::Clear() {
// @@protoc_insertion_point(message_clear_start:mpis.RequestContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&src_)) + sizeof(tag_));
  _internal_metadata_.Clear();
}

bool RequestContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpis.RequestContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 buffer_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buffer_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpis.RequestContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpis.RequestContext)
  return false;
#undef DO_
}

void RequestContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpis.RequestContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src = 1;
  if (this->src() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->src(), output);
  }

  // int32 device = 2;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->device(), output);
  }

  // int32 buffer_size = 3;
  if (this->buffer_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buffer_size(), output);
  }

  // int32 tag = 4;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpis.RequestContext)
}

::google::protobuf::uint8* RequestContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpis.RequestContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src = 1;
  if (this->src() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->src(), target);
  }

  // int32 device = 2;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->device(), target);
  }

  // int32 buffer_size = 3;
  if (this->buffer_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buffer_size(), target);
  }

  // int32 tag = 4;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpis.RequestContext)
  return target;
}

size_t RequestContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpis.RequestContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 src = 1;
  if (this->src() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->src());
  }

  // int32 device = 2;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  // int32 buffer_size = 3;
  if (this->buffer_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buffer_size());
  }

  // int32 tag = 4;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpis.RequestContext)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpis.RequestContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpis.RequestContext)
    MergeFrom(*source);
  }
}

void RequestContext::MergeFrom(const RequestContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpis.RequestContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src() != 0) {
    set_src(from.src());
  }
  if (from.device() != 0) {
    set_device(from.device());
  }
  if (from.buffer_size() != 0) {
    set_buffer_size(from.buffer_size());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void RequestContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpis.RequestContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestContext::CopyFrom(const RequestContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpis.RequestContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestContext::IsInitialized() const {
  return true;
}

void RequestContext::Swap(RequestContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestContext::InternalSwap(RequestContext* other) {
  using std::swap;
  swap(src_, other->src_);
  swap(device_, other->device_);
  swap(buffer_size_, other->buffer_size_);
  swap(tag_, other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestContext::GetMetadata() const {
  protobuf_mpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplyContext::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyContext::kStatusFieldNumber;
const int ReplyContext::kDstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyContext::ReplyContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mpi_2eproto::InitDefaultsReplyContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpis.ReplyContext)
}
ReplyContext::ReplyContext(const ReplyContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&dst_) -
    reinterpret_cast<char*>(&status_)) + sizeof(dst_));
  // @@protoc_insertion_point(copy_constructor:mpis.ReplyContext)
}

void ReplyContext::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_) -
      reinterpret_cast<char*>(&status_)) + sizeof(dst_));
  _cached_size_ = 0;
}

ReplyContext::~ReplyContext() {
  // @@protoc_insertion_point(destructor:mpis.ReplyContext)
  SharedDtor();
}

void ReplyContext::SharedDtor() {
}

void ReplyContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyContext::descriptor() {
  ::protobuf_mpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mpi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplyContext& ReplyContext::default_instance() {
  ::protobuf_mpi_2eproto::InitDefaultsReplyContext();
  return *internal_default_instance();
}

ReplyContext* ReplyContext::New(::google::protobuf::Arena* arena) const {
  ReplyContext* n = new ReplyContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplyContext::Clear() {
// @@protoc_insertion_point(message_clear_start:mpis.ReplyContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dst_) -
      reinterpret_cast<char*>(&status_)) + sizeof(dst_));
  _internal_metadata_.Clear();
}

bool ReplyContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpis.ReplyContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dst = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpis.ReplyContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpis.ReplyContext)
  return false;
#undef DO_
}

void ReplyContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpis.ReplyContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // int32 dst = 2;
  if (this->dst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dst(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpis.ReplyContext)
}

::google::protobuf::uint8* ReplyContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpis.ReplyContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // int32 dst = 2;
  if (this->dst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dst(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpis.ReplyContext)
  return target;
}

size_t ReplyContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpis.ReplyContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 dst = 2;
  if (this->dst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dst());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpis.ReplyContext)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplyContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpis.ReplyContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpis.ReplyContext)
    MergeFrom(*source);
  }
}

void ReplyContext::MergeFrom(const ReplyContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpis.ReplyContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.dst() != 0) {
    set_dst(from.dst());
  }
}

void ReplyContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpis.ReplyContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyContext::CopyFrom(const ReplyContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpis.ReplyContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyContext::IsInitialized() const {
  return true;
}

void ReplyContext::Swap(ReplyContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyContext::InternalSwap(ReplyContext* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(dst_, other->dst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplyContext::GetMetadata() const {
  protobuf_mpi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mpi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mpis

// @@protoc_insertion_point(global_scope)
